version: "3.1"

services:
  #####################   IPFS     #####################

  ipfs:
    image: ipfs/go-ipfs:v0.8.0
    container_name: delegate-ipfs
    network_mode: host
    volumes:
      - .ipfs_data:/data/ipfs
      - .ipfs:/ipfs/config
    environment:
      IPFS_SWARM_KEY_FILE: /ipfs/config/swarm.key
    entrypoint: []
    command: sh -c "/ipfs/config/start_ipfs daemon --migrate --enable-pubsub-experiment"
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "10m"

  #####################   Orbit     ##################### 
  orbitdb:
    image: tearust/tea-orbit-db-http-api:v0.0.13
    container_name: delegate-orbitdb
    depends_on: 
      - "ipfs"
    restart: always
    network_mode: host
    env_file: .env
    volumes:
      - .orbitdb:/orbitdb
    command: ["node", "--max-old-space-size=512", "src/cli.js", "api", "--orbitdb-dir", "/orbitdb", "--no-https", "--http1", "--api-port", "6001"]
    environment: 
      - IPFS_HOST=localhost
      - IPFS_PORT=5001
      - SEED=${SEED}
      - ADMIN_LIST=${ADMIN_LIST}
      - NONCE=epoch8-0.1
      - GLOBAL_BBS_DB=test
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "10m"

  # ################ Adapter  ##############

  adapter:
    image: tearust/adapter:epoch5-0.4
    container_name: "delegate-adapter"
    depends_on: 
      - "orbitdb"
    network_mode: host
    environment:
      IPFS_PORT: 5001
      IPFS_SERVER: localhost
      RPC_CLIENTURL: http://localhost:5010
      WAIT_HOSTS: localhost:5001
      WAIT_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 5
      ORBITDB_SERVER: localhost
      ORBITDB_PORT: 6001
      LAYER1_WALLET: https://wallet.teaproject.org
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "10m"

  # ################ Simulator  ##############
  nsm-simulator:
    image: tearust/nsm-simulator:fast-0.8.0
    container_name: "delegate-nsm"
    network_mode: host
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "10m"

  # ################ Runtime  ##############
  runtime:
    image: tearust/runtime:fast-0.8.0
    container_name: "delegate-runtime"
    network_mode: host
    environment:
      VMH_HOST: localhost
      SIM_CLIENT_URL: http://localhost:5999
      WAIT_HOSTS: localhost:5999
      WAIT_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 5
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "10m"

  vmh-server:
    image: tearust/vmh-server:fast-0.8.0
    container_name: "delegate-vmh"
    network_mode: host
    environment:
      CLIENT_HOST: localhost
      ENCLAVE_HOST: localhost
      WAIT_HOSTS: localhost:5006
      WAIT_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 5
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "10m"

  parent-instance-client:
    image: tearust/parent-instance-client:fast-0.8.0
    container_name: "delegate-client"
    network_mode: host
    volumes:
      - .log:/log
    # make sure 5998 port is available on server
    ports:
      - 5998:5998
    environment:
      ADAPTER_CLIENT_URL: http://localhost:5011
      LOG_FILE: /log/output.log
      VMH_HOST: localhost
      IPFS_HOST: localhost
      IPFS_PORT: 5001
      TEA_ID: 3zjLTxJHkEHI6NI4EJ7yoVCwF/OCIG4k/uky5jfC23s=
      TEA_ENV_SETTINGS:
        MODE:DEV
        CML_TYPE:C
        PUBLIC_URLS:https://tearust.com
        FLUENCER_HTTP_MODE:leader-only
      LAYER1_NODE_IP: localhost
      LAYER1_NODE_PORT: 9944
      LAYER1_ACCOUNT: //Alice
      ORBITDB_IP: localhost
      ORBITDB_PORT: 6001
      LIBP2P_ADDRESS: /ip4/138.68.21.103/tcp/5998
      LIBP2P_BOOTNODES: 
        /ip4/138.68.21.103/tcp/5998
        /ip4/138.68.247.206/tcp/5998
      WAIT_HOSTS: localhost:5007, localhost:8000, localhost:5001, localhost:9944
      WAIT_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 5
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "10m"

    # entrypoint: /bin/bash
    # stdin_open: true # docker run -i
    # tty: true        # docker run -t
